####Merges the training and the test sets to create one data set.
####Extracts only the measurements on the mean and standard deviation for each measurement. 
####Uses descriptive activity names to name the activities in the data set
####Appropriately labels the data set with descriptive variable names. 
####From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.

#setting working directory 
setwd("~/Documents/coursera/Getting_and_Cleaning_Data/")

install.packages(c("data.table" , "dplyr" , "reshape"))
library(data.table)
library(dplyr)
library(reshape)

#loading x_test
x_test<-read.table("./UCI HAR Dataset/test/x_test.txt")
head(x_test)

#loading features
features<-read.table("./UCI HAR Dataset/features.txt")[,2]
head(features,10)

#setting names to the dataset 
names(x_test)<-features

#Extracting only the measurements on the mean and standard deviation for each measurement
extract_mean_std<-x_test[,grep("[Mm][Ee][Aa][Nn]|[Ss][Tt][Dd]",names(x_test), value = T)]
head(extract_mean_std)
x_test = extract_mean_std

#loading y_test
y_test<-read.table("./UCI HAR Dataset/test/y_test.txt")
head(y_test)

#loading activity labels 
activity_labels<-read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
head(activity_labels)
y_test[,2]<-activity_labels[y_test[,1]]

#setting names to the dataset 
names(y_test)<-c("id_labels", "activity_labels")

#loading subject_test
subject_test<-read.table("./UCI HAR Dataset/test/subject_test.txt")
head(subject_test)
names(subject_test) <- "subject"

#binding test dataset
test<-cbind(x_test,y_test,subject_test)
head(test)


#loading x_train
x_train<-read.table("./UCI HAR Dataset/train/x_train.txt")
head(x_train)

#loading features
features<-read.table("./UCI HAR Dataset/features.txt")[,2]
head(features,10)

#setting names to the dataset 
names(x_train)<-features

#Extracting only the measurements on the mean and standard deviation for each measurement
extract_mean_std_train<-x_train[,grep("[Mm][Ee][Aa][Nn]|[Ss][Tt][Dd]",names(x_train), value = T)]
head(extract_mean_std_train)
x_train = extract_mean_std_train

#loading y_test
y_train<-read.table("./UCI HAR Dataset/train/y_train.txt")
head(y_train)

#loading activity labels 
activity_labels<-read.table("./UCI HAR Dataset/activity_labels.txt")[,2]
head(activity_labels)
y_train[,2]<-activity_labels[y_train[,1]]

#setting names to the dataset 
names(y_train)<-c("id_labels", "activity_labels")

#loading subject_test
subject_train<-read.table("./UCI HAR Dataset/train/subject_train.txt")
head(subject_train)
names(subject_train) <- "subject"

#binding test dataset
train<-cbind(x_train,y_train,subject_train)
head(train)

#merging dataset 
dataset<-merge(test,train, all = T)
head(dataset,1)

#average of each variable for each activity and each subject
melt_dataset<- melt(dataset, id.vars = c("subject", "activity_labels"))
dataset2<-cast(subject + activity_labels ~ variable, data = melt_dataset, fun = mean)

#writing the tidy dataset in txt
write.table(dataset2, file ="./tidy_dataset.txt", row.name=F)

